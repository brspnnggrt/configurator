{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","props","onMessageReceived","event","data","taskId","state","taskIdRequestData","update","requestData","window","parent","postMessage","iframe","id","query","api","function","arguments","response","status","model","find","r","setState","loading","changeHandler","checked","item","innerItem","Attributes","a","Values","v","Selected","runScript","script","PA_ID","PAV_ID","addEventListener","className","this","dataSource","grid","gutter","column","renderItem","header","Label","inneritem","Item","checkedChildren","ValueDisplay","unCheckedChildren","onChange","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8VAAe,I,2CC6GAA,E,kDAnGb,WAAYC,GAAQ,IAAD,uBACjB,cAAMA,IAYRC,kBAAoB,SAAAC,GACdA,EAAMC,KAAKC,SAAW,EAAKC,MAAMC,mBAAmB,EAAKC,OAAOL,IAdnD,EAiBnBM,YAAc,WACZC,OAAOC,OAAOC,YAAY,CACxBC,OAAQ,EAAKP,MAAMQ,GACnBT,OAAQ,EAAKC,MAAMC,kBACnBQ,MAAO,CAAC,CACNC,IAAK,0BACLC,SAAU,WACVC,UAAW,CAAC,CACV,QAAW,gBAGfC,SAAU,GACVC,OAAQ,WACP,gCA9Bc,EAiCnBZ,OAAS,SAAAL,GAEP,IAAIkB,EAAQlB,EAAMC,KAAKe,SAASG,MAAK,SAAAC,GAAC,MAAc,4BAAVA,EAAEP,KAAoD,aAAfO,EAAEN,YAGnF,EAAKO,SAAS,CACZC,SAAS,EACTrB,KAAMiB,EAAMjB,QAxCG,EA4CnBsB,cAAgB,SAACC,EAASC,EAAMC,GAE9B,EAAKvB,MAAMF,KAAK0B,WAAWR,MAAK,SAAAS,GAAC,OAAIA,GAAKH,KAAMI,OAAOV,MAAK,SAAAW,GAAC,OAAIA,GAAKJ,KAAWK,SAAWP,EAC5F,EAAKH,SAAS,CACZC,SAAS,EACTrB,KAAM,EAAKE,MAAMF,OAEnBM,OAAOC,OAAOC,YAAY,CACxBuB,WAAW,EACXC,OAAO,4DAAD,OAA8DR,EAAKS,MAAnE,2CAA2GR,EAAUS,OAArH,sBAAyIX,EAAzI,OACL,gCApDH,IAAMb,EAAK,sBAFM,OAGjB,EAAKR,MAAQ,CACXmB,SAAS,EACTX,GAAIA,EACJP,kBAAkB,GAAD,OAAKO,EAAL,gBACjBV,KAAM,IAERM,OAAO6B,iBAAiB,UAAW,EAAKrC,mBAAmB,GAC3D,EAAKO,cAVY,E,0CA0DnB,WAAU,IAAD,OACP,OAIE,aAFA,CAEA,OAAK+B,UAAU,MAAf,SAIE,sBAAKA,UAAU,cAAf,UACGC,KAAKnC,MAAMmB,SACV,oDAEAgB,KAAKnC,MAAMmB,SACX,cAAC,IAAD,CAAMiB,WAAYD,KAAKnC,MAAMF,KAAK0B,WAAYa,KAAM,CAAEC,OAAQ,EAAGC,OAAQ,GACvEC,WAAY,SAAAlB,GAAI,OACd,cAAC,IAAD,CAAMc,WAAYd,EAAKI,OAAQW,KAAM,CAAEC,OAAQ,EAAGC,OAAQ,GAAKE,OAAQnB,EAAKoB,MAC1EF,WAAY,SAAAG,GAAS,OACnB,cAAC,IAAKC,KAAN,UACE,cAAC,IAAD,CAAQC,gBAAiBF,EAAUG,aAAcC,kBAAmBJ,EAAUG,aAAczB,QAASsB,EAAUf,SAAUoB,SAAU,SAAA3B,GAAa,EAAKD,cAAcC,EAASC,EAAMqB,uB,GA/EtLM,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a2bdb581.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport { List, Space } from 'antd';\nimport React from 'react';\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack'\nimport { Switch } from 'antd';\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const id = 'antd-staubli-toggle';\n    this.state = {\n      loading: true,\n      id: id,\n      taskIdRequestData: `${id}-requestData`,\n      data: [],\n    };\n    window.addEventListener(\"message\", this.onMessageReceived, false);\n    this.requestData();\n  }\n\n  onMessageReceived = event => {\n    if (event.data.taskId === this.state.taskIdRequestData) this.update(event);\n  };\n\n  requestData = () => {\n    window.parent.postMessage({\n      iframe: this.state.id,\n      taskId: this.state.taskIdRequestData,\n      query: [{\n        api: '/api/rd/v1/Configurator',\n        function: 'getModel',\n        arguments: [{\n          'fakekey': 'fakevalue'\n        }]\n      }],\n      response: [],\n      status: 'request'\n    }, \"https://eusb.webcomcpq.com/\");\n  };\n\n  update = event => {\n    // prepare data\n    let model = event.data.response.find(r => r.api === '/api/rd/v1/Configurator' && r.function === 'getModel');\n\n    // update state if data available\n    this.setState({\n      loading: false,\n      data: model.data\n    });\n  };\n\n  changeHandler = (checked, item, innerItem) => {\n    // innerItem.Selected = checked;\n    this.state.data.Attributes.find(a => a == item).Values.find(v => v == innerItem).Selected = checked;\n    this.setState({\n      loading: false,\n      data: this.state.data\n    });\n    window.parent.postMessage({\n      runScript: true,\n      script: `cpq.models.configurator.attributes().find(a => a.id() == ${item.PA_ID}).values().find(v => v.pavId == ${innerItem.PAV_ID}).selected(${checked});`\n    }, \"https://eusb.webcomcpq.com/\");\n    // this.requestData();\n  }\n\n  render() {\n    return (\n\n      // this.state.data.Attributes[].Values[].ValueDisplay\n\n      <div className=\"App\">\n        {/* <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" style={{'height': '100px'}}/>\n        </header> */}\n        <div className=\"App-content\">\n          {this.state.loading &&\n            <span>loading data...</span>\n          }\n          {!this.state.loading &&\n            <List dataSource={this.state.data.Attributes} grid={{ gutter: 0, column: 1 }}\n              renderItem={item => (\n                <List dataSource={item.Values} grid={{ gutter: 0, column: 4 }} header={item.Label}\n                  renderItem={inneritem => (\n                    <List.Item>\n                      <Switch checkedChildren={inneritem.ValueDisplay} unCheckedChildren={inneritem.ValueDisplay} checked={inneritem.Selected} onChange={checked => { this.changeHandler(checked, item, inneritem) }} />\n                    </List.Item>\n                  )}\n                />\n              )}\n            />\n          }\n          {/* { !this.state.loading && \n            <List dataSource={[...this.state.data.Attributes[0].Values, ...this.state.data.Attributes[1].Values, ...this.state.data.Attributes[2].Values]} \n            grid={{ gutter: 0, column: 3 }} renderItem={item => (\n                <List.Item>\n                  <Switch checkedChildren={item.ValueDisplay} unCheckedChildren={item.ValueDisplay} className={this.state.data.Attributes.find(x => x.Values.includes(item)).Name.replace(/ /g, '')}/>\n                </List.Item>\n              )}\n            />\n          } */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}